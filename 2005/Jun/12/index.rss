<?xml version="1.0"?>
<!-- RSS generated by pyblosxom-1.0.0 -->

<rss version="2.0">
  <channel>
    <title>Chris Lee</title>
    <link>http://c133.org/blog/</link>
    <description>all clee, all the time</description>
    <webMaster>clee@kde.org</webMaster>
    <managingEditor>clee@kde.org</managingEditor>
    <language>en</language>
  <item>
    <title>build system notes</title>
    <link>http://c133.org/blog/tech/KDE/build_system_notes.html</link>
    <pubDate>Sun, 12 Jun 2005 22:34 -1000</pubDate>
    <description>&lt;p&gt;We had a discussion in #kde-devel earlier about what KDE&apos;s requirements for a build system are. What are the current problems we have with autoconf/automake/libtool? What features do they provide that we really care about? How hard would it be to replace any/all of them with things that suck less?&lt;/p&gt;&lt;p&gt;I took notes of the discussion. They&apos;re below; I&apos;d like to get more feedback on this.&lt;/p&gt;&lt;p&gt;(One of the first points that I&apos;m sure someone will make is &quot;auto* is cross-platform! We need to support KDE on platforms that aren&apos;t Linux!&quot; etc. Look, we realize this. However, auto* provides lots of problems for us on platforms we do care about, including MacOS X and Windows. (Ask RangerRick or js about them on IRC, or email them.)&lt;/p&gt;&lt;p&gt;Just because we&apos;re using auto* and friends doesn&apos;t mean that our code works; as a matter of fact, RangerRick noted that so far, all of his issues with the Mac port of the work-in-progress KDE4 have been build issues, and none of them have been code-related yet.  &lt;/p&gt;&lt;p&gt;This is clearly a problem and since KDE4 is an aggressive new major release, we should solve it in the KDE4 timeframe. We don&apos;t want to have to wait until KDE5 for a build system that doesn&apos;t suck, do we?&lt;/p&gt;&lt;p&gt;Without further ado, the notes from the discussion.&lt;/p&gt;&lt;p&gt;Must support:&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;generating binaries (duh)&lt;/li&gt;&lt;br /&gt;&lt;li&gt;generating shared libs (on all ELF platforms + MacOS X; Windows?)&lt;/li&gt;&lt;br /&gt;&lt;li&gt;icon installation&lt;/li&gt;&lt;br /&gt;&lt;li&gt;uic, moc, KConfigXT, etc&lt;/li&gt;&lt;br /&gt;&lt;li&gt;GCC visibility&lt;/li&gt;&lt;br /&gt;&lt;li&gt;automatic dependency resolution&lt;/li&gt;&lt;br /&gt;&lt;li&gt;manual hints for dependency resolution&lt;/li&gt;&lt;br /&gt;&lt;li&gt;flex/bison&lt;/li&gt;&lt;br /&gt;&lt;li&gt;non-recursive (flat) builds&lt;/li&gt;&lt;br /&gt;&lt;li&gt;--enable-final&lt;/li&gt;&lt;br /&gt;&lt;li&gt;builddir != srcdir&lt;/li&gt;&lt;br /&gt;&lt;li&gt;simple to the point of being learnable within 5 minutes&lt;/li&gt;&lt;br /&gt;&lt;li&gt;kdeinit support (?)&lt;/li&gt;&lt;br /&gt;&lt;li&gt;multiple build targets (libfoo, libbar, libbaz) in one file&lt;/li&gt;&lt;br /&gt;&lt;li&gt;--compile-slots, like in unsermake&lt;/li&gt;&lt;br /&gt;&lt;li&gt;pkg-config support&lt;/li&gt;&lt;br /&gt;&lt;li&gt;support rpath sanely&lt;/li&gt;&lt;br /&gt;&lt;li&gt;ability to link &amp; run uninstalled binaries&lt;/li&gt;&lt;br /&gt;&lt;li&gt;easily integrated into KDevelop&lt;/li&gt;&lt;br /&gt;&lt;li&gt;&apos;admin&apos; needs to be shipped in KDE instead of in src of each app (if we keep the &apos;admin&apos; dir, that is)&lt;/li&gt;&lt;br /&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;Would be nice, but not necessary:&lt;br /&gt;&lt;ul&gt;&lt;br /&gt;&lt;li&gt;having a standard and distributed build system and test suite&lt;/li&gt;&lt;br /&gt;&lt;li&gt;ability to build from svn:/trunk/KDE&lt;/li&gt;&lt;br /&gt;&lt;/ul&gt;&lt;/p&gt;&lt;p&gt;Thoughts?&lt;br /&gt;&lt;/p&gt;</description>
  </item>
  </channel>
</rss>