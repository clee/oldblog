<?xml version="1.0"?>
<!-- RSS generated by pyblosxom-1.0.0 -->

<rss version="2.0">
  <channel>
    <title>Chris Lee</title>
    <link>http://c133.org/blog/</link>
    <description>all clee, all the time</description>
    <webMaster>clee@kde.org</webMaster>
    <managingEditor>clee@kde.org</managingEditor>
    <language>en</language>
  <item>
    <title>announcing MobilePushr</title>
    <link>http://c133.org/blog/tech/announcing_mobilepushr.html</link>
    <pubDate>Fri, 21 Sep 2007 04:18 -1000</pubDate>
    <description>&lt;p&gt;When I first heard that the iPhone had a camera built-in, as well as WiFi, those two features triggered the following thought:&lt;/p&gt;&lt;p&gt;&lt;blockquote&gt;It would be really hot if you could upload the pictures from the camera directly to Flickr.&lt;/blockquote&gt;&lt;/p&gt;&lt;p&gt;When I got my iPhone, I figured out a workflow that I could use to post pictures from the phone to my Flickr account, but it &lt;strike&gt;totally sucked balls&lt;/strike&gt; was less than optimal. For each picture I wanted to upload, I had to open the picture in the Photos app and email it to a special address that Flickr had associated with my account.&lt;/p&gt;&lt;p&gt;Negatives of this approach? Impossible to use for more than a couple of images at a time, primarily, but also, annoyingly, the Mail app on the iPhone scales and recompresses the JPEG images before sending - and it strips them of their EXIF data, too.&lt;/p&gt;&lt;p&gt;So I was mildly displeased, but there was a way I could get it to work, kinda.&lt;/p&gt;&lt;p&gt;Then the iPhone got cracked wide open. People started figuring out how to write third-party apps and get them installed on their iPhones, and - to be honest - the UI for it, via Installer.app, is - even though it&apos;s not from Apple - better than anything I&apos;ve seen on any other mobile phone, ever.&lt;/p&gt;&lt;p&gt;The Friday before last (September 7th), I decided it was time to take matters into my own hands. Finally learn Objective C. Start writing my dedicated &quot;Push all of the images in my Camera Roll to Flickr, right now dammit&quot; application. And I got a pretty good start! Got the toolchain to build working iPhone apps, and that only took a few hours. Started reading through Flickr&apos;s API documentation. Started implementing some functions that didn&apos;t require authorization to call - learning how to use Flickr&apos;s REST API, basically. Once the first couple of unauthenticated calls worked and did what I expected, I knew it would only be a matter of time before I had my app working.&lt;/p&gt;&lt;p&gt;And then someone pointed me to &lt;a href=&quot;http://http://code.google.com/p/iflickr/&quot;&gt;iFlickr&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;My first thought was &quot;Dammit, somebody beat me to it.&quot; And I was a little depressed for a bit.&lt;/p&gt;&lt;p&gt;I downloaded it and tried to get it working. No offense to the iFlickr devs, but they clearly didn&apos;t put a lot of thought into the user experience (or if they did, I posit that their ideas about &quot;good user experience&quot; work completely differently from mine). I didn&apos;t end up getting it to work, but it&apos;s open-source, right?&lt;/p&gt;&lt;p&gt;Naturally, my next thought: &quot;Well, I&apos;ve been working on mine, and this doesn&apos;t really do what I wanted. But... maybe I can steal some of their code at least!&quot;&lt;/p&gt;&lt;p&gt;And then I looked at the code.&lt;/p&gt;&lt;p&gt;My eyes still burn a little bit from that. That ... that was not a good idea. I&apos;ve had much better ideas in the past.&lt;/p&gt;&lt;p&gt;I worked on this for the next few nights, realized that I could completely avoid the messy minitoken crap by using the &quot;Desktop app&quot; authentication mode from Flickr, deleted all of my code that dealt with mini-tokens, and the other night, I finally got it to actually upload pictures to my Flickr account. (My friend &lt;a href=&quot;http://cliffhacks.blogspot.com/&quot;&gt;Cliff&lt;/a&gt;&apos;s help was so valuable as to be incalculable.)&lt;/p&gt;&lt;p&gt;I&apos;ll post more technical details later, but the important thing is: &lt;a href=&quot;http://mobilepushr.jottit.com/&quot;&gt;MobilePushr&lt;/a&gt; is out. The UI is going to get a lot of love in the next few days, because the current one doesn&apos;t provide nearly enough feedback, but as of right now, MobilePushr lets me do something that I&apos;ve wanted for almost three months. &lt;/p&gt;&lt;p&gt;I can push my JPEGs directly from my iPhone to my Flickr account with the push of a single, giant red button. (And so can you! If you go download it and install it on your iPhone, that is. Assuming you have an iPhone.)&lt;/p&gt;&lt;p&gt;Also, of course, MobilePushr is Open Source / Free Software, released under the GPLv2. If you use git, you can look at my code by cloning git://mg8.org/MobilePushr and poking around.&lt;/p&gt;&lt;p&gt;The really awesome thing about all of this is that, through Flickr, I can see how many people have given my app permission to link to their account, and in the first twelve hours alone over a thousand people have activated support for MobilePushr on their Flickr accounts.&lt;/p&gt;&lt;p&gt;I don&apos;t even have words to describe how awesome that makes me feel.&lt;br /&gt;&lt;/p&gt;</description>
  </item>
  </channel>
</rss>